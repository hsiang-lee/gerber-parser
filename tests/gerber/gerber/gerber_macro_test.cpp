#include <gtest/gtest.h>
#include "gerber/gerber_macro.h"
#include "gerber/gerber_command.h"


TEST(GerberMacroTest, TestRender1) {
    std::string data = "1,1,0.025400,0.085200,0.085200*\
    1,1,0.025400,-0.802300,0.085200*\
    20,1,0.025400,0.085200,0.085200,-0.802300,0.085200,0.0*\
    1,1,0.025400,-0.802300,0.085200*\
    1,1,0.025400,-0.802300,0.802300*\
    20,1,0.025400,-0.802300,0.085200,-0.802300,0.802300,0.0*\
    1,1,0.025400,-0.802300,0.802300*\
    1,1,0.025400,0.802300,0.802300*\
    20,1,0.025400,-0.802300,0.802300,0.802300,0.802300,0.0*\
    1,1,0.025400,0.802300,0.802300*\
    1,1,0.025400,0.802300,-0.802300*\
    20,1,0.025400,0.802300,0.802300,0.802300,-0.802300,0.0*\
    1,1,0.025400,0.802300,-0.802300*\
    1,1,0.025400,0.085200,-0.802300*\
    20,1,0.025400,0.802300,-0.802300,0.085200,-0.802300,0.0*\
    1,1,0.025400,0.085200,-0.802300*\
    1,1,0.025400,0.085200,0.085200*\
    20,1,0.025400,0.085200,-0.802300,0.085200,0.085200,0.0*\
    1,1,0.050800,0.789600,0.072500*\
    1,1,0.050800,0.097900,0.072500*\
    20,1,0.050800,0.789600,0.072500,0.097900,0.072500,0.0*\
    22,1,1.630000,0.406400,-0.815000,0.408600,0.0*\
    22,1,1.630000,0.406400,-0.815000,0.072500,0.0*\
    22,1,0.406400,0.887500,0.408600,-0.815000,0.0*\
    22,1,0.406400,0.887500,0.072500,-0.815000,0.0*";
    GerberMacro macro("A32301113563-e-gbs", data, false);
    
    EXPECT_TRUE(macro.Valid());
    EXPECT_EQ(macro.Name(), "A32301113563-e-gbs");
    
    auto cmds = macro.Render(std::vector<double>{});
    EXPECT_EQ(cmds.size(), 94);
    EXPECT_EQ(cmds[0]->command_, RenderCommand::cCircle);
    EXPECT_DOUBLE_EQ(cmds[0]->A, 0);
    EXPECT_DOUBLE_EQ(cmds[0]->X, 0.085200000000000026);
    EXPECT_DOUBLE_EQ(cmds[0]->Y, 0.085200000000000026);
    EXPECT_EQ(cmds[50]->command_, RenderCommand::cCircle);
    EXPECT_DOUBLE_EQ(cmds[50]->A, 0);
    EXPECT_DOUBLE_EQ(cmds[50]->X, 0.085200000000000026);
    EXPECT_DOUBLE_EQ(cmds[50]->Y, -0.80230000000000001);
}

TEST(GerberMacroTest, TestRender2) {
    std::string data = "1,1,0.025400,0.000000,1.257300*\
    1,1,0.025400,0.000000,-1.257300*\
    20,1,0.025400,0.000000,1.257300,0.000000,-1.257300,0.0*\
    1,1,0.025400,1.257300,0.000000*\
    1,1,0.025400,-1.257300,0.000000*\
    20,1,0.025400,1.257300,0.000000,-1.257300,0.000000,0.0*\
    1,1,0.025400,-0.719842,0.797335*\
    1,1,0.025400,-0.719842,0.317930*\
    20,1,0.025400,-0.719842,0.797335,-0.719842,0.317930,0.0*\
    1,1,0.025400,-0.719842,0.317930*\
    1,1,0.025400,-0.400237,0.317930*\
    20,1,0.025400,-0.719842,0.317930,-0.400238,0.317930,0.0*\
    4,1,4,\
    -0.250000,-0.250000,\
    -0.250000,0.250000,\
    0.250000,0.250000,\
    0.250000,-0.250000,\
    -0.250000,-0.250000,\
    0.0000*\
    1,1,0.400000,0.000000,0.000000*";
    GerberMacro macro("A1lth_1-3_scpt", data, false);
    
    EXPECT_TRUE(macro.Valid());
    EXPECT_EQ(macro.Name(), "A1lth_1-3_scpt");
    
    auto cmds = macro.Render(std::vector<double>{});
    EXPECT_EQ(cmds.size(), 48);
    EXPECT_EQ(cmds[0]->command_, RenderCommand::cCircle);
    EXPECT_DOUBLE_EQ(cmds[0]->A, 0);
    EXPECT_DOUBLE_EQ(cmds[0]->X, 0);
    EXPECT_DOUBLE_EQ(cmds[0]->Y, 1.2572999999999999);
    EXPECT_EQ(cmds[47]->command_, RenderCommand::cFill);
    EXPECT_DOUBLE_EQ(cmds[47]->A, 0);
    EXPECT_DOUBLE_EQ(cmds[47]->X, 0);
    EXPECT_DOUBLE_EQ(cmds[47]->Y, 0);
}
